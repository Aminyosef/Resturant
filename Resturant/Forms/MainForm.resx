<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCABaAGQDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        /KKKKACuP+Nnxu0P4A+AdQ8SeIZpIdM0yCS5mMaF32RoXcgf7KKzfQV2FfLv7YXjzTfHfxQs/g3/AGiF
        1bx9o+o2a27rkBPszZcA8EgkcehNAHGeHP8Agv8A/su+MNPhuIfHxjjmwVMlnIv9K7nQf+CxH7PPiNit
        r8QLNivYwSLn9K/Jj9ln9mn4Lt4m1D4b+K/Az6j4vsfElxoKXcd7eQrKRJtQssZEa5z+FfUcX/BGz4d6
        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
        tjjXAwMKBiplhVT3/OnUUAFFFFABRRRQB//Z
</value>
  </data>
</root>